% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pls_analysis.R, R/plsda_analysis.R
\name{pls,mass_dataset-method}
\alias{pls,mass_dataset-method}
\alias{plsda,mass_dataset-method}
\title{pls}
\usage{
\S4method{pls}{mass_dataset}(
  X,
  Y = NULL,
  ncomp = 2,
  scale = FALSE,
  mode = c("regression", "canonical", "invariant", "classic"),
  tol = 1e-06,
  max.iter = 100,
  near.zero.var = FALSE,
  logratio = "none",
  multilevel = NULL,
  all.outputs = TRUE
)

\S4method{plsda}{mass_dataset}(
  X,
  Y = NULL,
  ncomp = 2,
  scale = FALSE,
  tol = 1e-06,
  max.iter = 100,
  near.zero.var = FALSE,
  logratio = "none",
  multilevel = NULL,
  all.outputs = TRUE
)
}
\arguments{
\item{X}{mass_dataset}

\item{Y}{a factor or a class vector for the discrete outcome.}

\item{ncomp}{ncomp}

\item{scale}{scale}

\item{mode}{mode}

\item{tol}{tol}

\item{max.iter}{max.iter}

\item{near.zero.var}{near.zero.var}

\item{logratio}{logratio}

\item{multilevel}{multilevel}

\item{all.outputs}{all.outputs}
}
\value{
A pls class

A plsda class
}
\description{
#' @method pls mass_dataset
#' @docType methods
#' @importFrom mixOmics pls plotIndiv plotVar
#' @export
}
\details{
# data("liver_aging_pos")
# 
# X <- liver_aging_pos
# X <-
#   X %>%
#   activate_mass_dataset(what = "sample_info") %>%
#   dplyr::filter(group != "QC")
# 
# Y <- X@sample_info$group
# Y = convert_dummy_variable(y = Y)
# 
# pls_object <-
#   mixOmics::pls(X, Y = Y, ncomp = 2)
# 
# plotIndiv(pls_object)
# plotVar(pls_object)

pls.mass_dataset <-
  function(X,
           Y = NULL,
           ncomp = 2,
           scale = FALSE,
           mode = c("regression", "canonical", "invariant", "classic"),
           tol = 1e-06,
           max.iter = 100,
           near.zero.var = FALSE,
           logratio = "none",
           multilevel = NULL,
           all.outputs = TRUE) {
    mode <- match.arg(mode)
    expression_data = X@expression_data
    
    linn.pls <- 
    mixOmics::pls(
      X = as.matrix(t(expression_data)),
      Y = Y,
      ncomp = ncomp,
      scale = FALSE,
      mode = mode, tol = tol,
      max.iter = max.iter, 
      near.zero.var = near.zero.var, 
      logratio = logratio,
      multilevel = multilevel, 
      all.outputs = all.outputs
    )
    return(linn.pls)
  }
}
